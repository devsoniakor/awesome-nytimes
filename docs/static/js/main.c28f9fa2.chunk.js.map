{"version":3,"sources":["components/SearchBar/SearchBar.tsx","routes.ts","components/NewsItem/NewsItem.tsx","store/types.ts","store/actions.ts","api_key.ts","thunks.ts","components/ArticleList/ArticleList.tsx","components/FavouritesList/FavouritesList.tsx","components/App.tsx","serviceWorker.ts","store/reducers.ts","store/store.ts","index.tsx"],"names":["connector","connect","state","query","props","history","useHistory","className","onSubmit","event","preventDefault","location","pathname","push","target","value","classList","add","searchArticle","remove","handleSubmit","type","placeholder","name","defaultValue","required","title","formNoValidate","onClick","e","NewsItem","FETCHING_STATUS","handleFavoritClick","item","isFavourite","onFavouritesClicked","multimedia","length","tumbnail","filter","el","subtype","includes","imgSrc","url","href","web_url","rel","src","alt","getImage","headline","main","_","max","regex","RegExp","text","abstract","m","match","renderCotent","findArticleSuccess","articles","page","payload","loadMoreArticlesSuccess","removeFavourite","id","KEY","API","getAxiosConfig","params","q","fq","sort","fetchingStatus","favouriteArticles","favourites","dispatch","loadMoreArticle","a","config","axios","get","then","response","data","docs","addToFavourite","article","addToFavourites","handleFavouriteClick","_id","loadingMessage","Spinner","animation","content","arr","map","news","key","renderItems","LOADING_IN_PROGRESS","FETCHING_DONE","handleClick","renderButton","FINDING_IN_PROGRESS","handleButtonClick","goBack","renderGoBackButton","noContent","loadArticles","findArticle","path","component","FavouritesList","ArticleList","Boolean","window","hostname","initialFavouritesState","rootReducer","combineReducers","action","concat","ReactDOM","render","store","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c28f9fa2.chunk.js","sourcesContent":["import React, { SyntheticEvent } from 'react';\nimport { FaSearch, FaStar } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport { FAVOURITES_ROUTE, HOME_ROUTE } from '../../routes';\nimport { AppState } from '../../store/store';\nimport { connect, ConnectedProps } from 'react-redux';\nimport './SearchBar.scss';\n\nconst mapStateToProps = (state: AppState) => ({\n  query: state.query,\n});\n\nconst connector = connect(mapStateToProps, {});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SearchBarProps = PropsFromRedux & {\n  searchArticle: (query: string) => void;\n};\n\nfunction SearchBar(props: SearchBarProps): JSX.Element {\n  const history = useHistory();\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    if (history.location.pathname !== HOME_ROUTE) {\n      history.push(HOME_ROUTE);\n    }\n    if (event.target.query.value === '') {\n      event.target.classList.add('was-validated');\n    } else {\n      props.searchArticle(event.target.query.value);\n      event.target.classList.remove('was-validated');\n    }\n  };\n\n  const handleBookmarkClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    if (history.location.pathname !== FAVOURITES_ROUTE) {\n      history.push(FAVOURITES_ROUTE);\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-lg-8\">\n        <div className=\"card bg-searchbar mb-4\">\n          <div className=\"card-body text-center\">\n            <form\n              className=\"needs-validation\"\n              onSubmit={(event: SyntheticEvent) => handleSubmit(event)}\n            >\n              <div className=\"form-row\">\n                <div className=\"input-group input-group-lg d-inline-flex\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search Articles\"\n                    className=\"form-control\"\n                    name=\"query\"\n                    defaultValue={props.query}\n                    required={true}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-sm btn-outline-lovo\"\n                      title=\"검색\"\n                      formNoValidate={true}\n                    >\n                      <FaSearch />\n                    </button>\n                    <button\n                      className=\"btn btn-sm btn-outline-lovo\"\n                      title=\"즐겨찾기\"\n                      onClick={(e: React.MouseEvent) => handleBookmarkClick(e)}\n                    >\n                      <FaStar />\n                    </button>\n                  </div>\n                  <div className=\"invalid-feedback\">검색어를 입력해 주세요</div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connector(SearchBar);\n","export const HOME_ROUTE = '/';\nexport const FAVOURITES_ROUTE = '/favorite';\n","import React, { SyntheticEvent } from 'react';\nimport { Article, MediaItem } from '../../store/models';\nimport { FaRegStar, FaStar } from 'react-icons/fa';\nimport './NewsItem.scss';\n\ninterface NewsItemProps {\n  item: Article;\n  onFavouritesClicked: (item: Article, isFavourite: boolean) => void;\n  isFavourite: boolean;\n}\n\nfunction NewsItem(props: NewsItemProps): JSX.Element {\n  const renderCotent = (item: Article, max: number): JSX.Element => {\n    const regex = new RegExp(`(\\\\S+\\\\s+){${max}}`);\n    const text = item.abstract;\n    const m: string[] | null = text.match(regex);\n    if (m !== null) {\n      return (\n        <p className=\"card-text\">\n          {m[0]}\n          <a\n            href={item.web_url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-info stretched-link\"\n          >\n            . . .more\n          </a>\n        </p>\n      );\n    } else {\n      return (\n        <p className=\"card-text\">\n          <a\n            href={item.web_url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"stretched-link text-decoration-none text-reset\"\n          >\n            {text}\n          </a>\n        </p>\n      );\n    }\n  };\n\n  const getImage = (item: Article): JSX.Element | undefined => {\n    if (item.multimedia.length > 0) {\n      const tumbnail: MediaItem[] = item.multimedia.filter((el: MediaItem): boolean =>\n        el.subtype.includes('smallSquare252')\n      );\n      let imgSrc = '//placehold.it/150';\n      if (tumbnail.length > 0) {\n        imgSrc = `https://www.nytimes.com/${tumbnail[0].url}`;\n      } else {\n        imgSrc = `https://www.nytimes.com/${item.multimedia[0].url}`;\n      }\n      return (\n        <div className=\"col-md-4\">\n          <a href={props.item.web_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={imgSrc} className=\"img-fluid d-block h-100 w-100\" alt=\"article media\" />\n          </a>\n        </div>\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  const renderItem = (): JSX.Element => {\n    return (\n      <div className=\"card mb-3 news-card\">\n        <div className=\"row no-gutters\">\n          {getImage(props.item)}\n          <div className={props.item.multimedia.length ? 'col-md-8' : 'col'}>\n            <div className=\"card-body\">\n              <div className=\"d-flex\">\n                <h5 className=\"card-title flex-grow-1\">{props.item.headline.main}</h5>\n                {props.isFavourite ? (\n                  <FaStar\n                    className=\"favourit-icon ml-3 mr-0 my-0 text-lovo\"\n                    title=\"즐겨찾기 취소\"\n                    onClick={(_: SyntheticEvent): void | undefined =>\n                      handleFavoritClick(props.item, true)\n                    }\n                  />\n                ) : (\n                  <FaRegStar\n                    className=\"favourit-icon ml-3 mr-0 my-0 text-lovo\"\n                    title=\"즐겨찾기에 추가하기\"\n                    onClick={(_: SyntheticEvent): void | undefined =>\n                      handleFavoritClick(props.item, false)\n                    }\n                  />\n                )}\n              </div>\n              {renderCotent(props.item, 30)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleFavoritClick = (item: Article, isFavourite: boolean): void => {\n    props.onFavouritesClicked(item, isFavourite);\n  };\n\n  return <div className=\"container-sm justify-content-center\">{renderItem()}</div>;\n}\n\nexport default NewsItem;\n","import { Article } from './models';\n\nexport const LOAD_ARTICLES = 'LOAD_ARTICLES';\nexport const LOAD_ARTICLES_IN_PROGRESS = 'LOAD_ARTICLES_IN_PROGRESS';\nexport const LOAD_ARTICLES_SUCCESS = 'LOAD_ARTICLES_SUCCESS';\nexport const FIND_ARTICLES_SUCCESS = 'FIND_ARTICLES_SUCCESS';\nexport const FIND_ARTICLES_IN_PROGRESS = 'FIND_ARTICLES_IN_PROGRESS';\nexport const LOAD_ARTICLES_FAILED = 'LOAD_ARTICLES_FAILED';\n\ninterface LoadArticleAction {\n  type: typeof LOAD_ARTICLES;\n  payload: { articles: Article[] };\n}\n\ninterface LoadArticleInProgressAction {\n  type: typeof LOAD_ARTICLES_IN_PROGRESS;\n}\n\ninterface FindArticleInProgressAction {\n  type: typeof FIND_ARTICLES_IN_PROGRESS;\n}\ninterface FindArticleSuccess {\n  type: typeof FIND_ARTICLES_SUCCESS;\n  payload: { articles: Article[]; query: string; page: number };\n}\n\ninterface LoadArticlesSuccess {\n  type: typeof LOAD_ARTICLES_SUCCESS;\n  payload: { articles: Article[]; query: string; page: number };\n}\n\ninterface LoadArticlesFailed {\n  type: typeof LOAD_ARTICLES_FAILED;\n  payload: { articles: Article[]; query: string; page: number };\n}\n\nexport enum FETCHING_STATUS {\n  LOADING_IN_PROGRESS,\n  FINDING_IN_PROGRESS,\n  FETCHING_DONE,\n}\n\nexport type ArticleActionType =\n  | LoadArticleAction\n  | LoadArticleInProgressAction\n  | LoadArticlesSuccess\n  | LoadArticlesFailed\n  | FindArticleSuccess\n  | FindArticleInProgressAction;\n\nexport const ADD_TO_FAVOURITES = 'ADD_TO_FAVOURITES';\nexport const REMOVE_FAVOURITE = 'REMOVE_FAVOURITE';\n\ninterface AddToFavourites {\n  type: typeof ADD_TO_FAVOURITES;\n  payload: { article: Article };\n}\n\ninterface RemoveFavourite {\n  type: typeof REMOVE_FAVOURITE;\n  payload: { id: string };\n}\n\nexport type Favourites = {\n  articles: Article[]\n  map: { [key: string]: boolean }\n};\n\nexport type FavouritesActionType = AddToFavourites | RemoveFavourite;\n","import {\n  LOAD_ARTICLES_IN_PROGRESS,\n  LOAD_ARTICLES_SUCCESS as LOAD_MORE_ARTICLES_SUCCESS,\n  LOAD_ARTICLES_FAILED,\n  FIND_ARTICLES_SUCCESS,\n  FIND_ARTICLES_IN_PROGRESS,\n  ADD_TO_FAVOURITES,\n  REMOVE_FAVOURITE,\n} from './types';\nimport { Article } from './models';\n\nexport const loadArticlesInProgress = () => {\n  return { type: LOAD_ARTICLES_IN_PROGRESS };\n};\n\nexport const findArticlesInProgress = () => {\n  return { type: FIND_ARTICLES_IN_PROGRESS };\n};\n\nexport const findArticleSuccess = (articles: Article[], query: string, page: number) => {\n  return {\n    type: FIND_ARTICLES_SUCCESS,\n    payload: { articles, query, page },\n  };\n};\n\nexport const loadMoreArticlesSuccess = (articles: Article[], query: string, page: number) => {\n  return {\n    type: LOAD_MORE_ARTICLES_SUCCESS,\n    payload: { articles, query, page },\n  };\n};\n\nexport const loadArticlesFailed = () => {\n  return { type: LOAD_ARTICLES_FAILED };\n};\n\nexport const addToFavourites = (article: Article) => {\n  return {\n    type: ADD_TO_FAVOURITES,\n    payload: { article },\n  };\n};\n\nexport const removeFavourite = (id: string) => {\n  return {\n    type: REMOVE_FAVOURITE,\n    payload: { id },\n  };\n};\n","export const KEY = 'wTwRh7Blb0nUPWPWvHQCWVupJSoQBqeu';\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppState } from './store/store';\nimport {\n  loadArticlesInProgress,\n  loadMoreArticlesSuccess,\n  loadArticlesFailed,\n  findArticleSuccess,\n  findArticlesInProgress,\n} from './store/actions';\nimport axios, { AxiosResponse, AxiosRequestConfig } from 'axios';\nimport { ArticleSearchResponse, Article } from './store/models';\nimport { KEY } from './api_key';\n\nconst API = 'https://api.nytimes.com/svc/search/v2/articlesearch.json';\n// const API = 'http://localhost:4000/articlesearch.json';\n\nexport const findArticle = (\n  query: string = '',\n  page: number = 0\n): ThunkAction<void, AppState, null, Action<string>> => async (dispatch) => {\n  try {\n    dispatch(findArticlesInProgress());\n    const config = getAxiosConfig(query, page);\n    const articles = await axios\n      .get(API, config)\n      .then((response: AxiosResponse<ArticleSearchResponse>) => {\n        const arr: Article[] = response.data.response.docs;\n        return arr;\n      });\n\n    dispatch(findArticleSuccess(articles, query, page));\n  } catch (err) {\n    dispatch(loadArticlesFailed());\n  }\n};\n\nexport const loadMoreArticle = (\n  query: string,\n  page: number = 0\n): ThunkAction<void, AppState, null, Action<string>> => async (dispatch) => {\n  try {\n    dispatch(loadArticlesInProgress());\n    const config = getAxiosConfig(query, page);\n    const articles = await axios\n      .get(API, config)\n      .then((response: AxiosResponse<ArticleSearchResponse>) => {\n        const arr: Article[] = response.data.response.docs;\n        return arr;\n      });\n    dispatch(loadMoreArticlesSuccess(articles, query, page));\n  } catch (err) {\n    dispatch(loadArticlesFailed());\n  }\n};\n\nconst getAxiosConfig = (query: string, page = 0): AxiosRequestConfig => {\n  return {\n    params: {\n      q: query,\n      'api-key': KEY,\n      page,\n      fq: 'source:(\"The New York Times\")',\n      sort: 'relevance',\n    },\n  };\n};\n","import React, { FC, SyntheticEvent } from 'react';\nimport { Article } from '../../store/models';\nimport NewsItem from '../NewsItem/NewsItem';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../store/store';\nimport { AiOutlineReload } from 'react-icons/ai';\nimport { loadMoreArticle } from '../../thunks';\nimport { FETCHING_STATUS, Favourites } from '../../store/types';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { addToFavourites, removeFavourite } from '../../store/actions';\n\ninterface IArticleListProps {\n  articles: Article[];\n  favouriteArticles: Favourites;\n  fetchingStatus: FETCHING_STATUS;\n  loadMoreArticle: (query: string, page: number) => void;\n  removeFavourite: (id: string) => void;\n  addToFavourite: (article: Article) => void;\n  page: number;\n  query: string;\n}\n\nconst ArticleList: FC<IArticleListProps> = (props: IArticleListProps): JSX.Element => {\n  const handleClick = (event: SyntheticEvent) => {\n    event.preventDefault();\n    props.loadMoreArticle(props.query, props.page);\n  };\n\n  const handleFavouriteClick = (article: Article, isFavourite: boolean) => {\n    isFavourite ? props.removeFavourite(article._id) : props.addToFavourite(article);\n  };\n\n  const renderItems = (): JSX.Element[] => {\n    const arr: JSX.Element[] = [];\n    const map = props.favouriteArticles.map;\n    // eslint-disable-next-line array-callback-return\n    props.articles.map((news): void => {\n      arr.push(\n        <NewsItem\n          key={news._id}\n          item={news}\n          isFavourite={map[news._id]}\n          onFavouritesClicked={handleFavouriteClick}\n        />\n      );\n    });\n    return arr;\n  };\n\n  const renderButton = (): JSX.Element | undefined => {\n    switch (props.fetchingStatus) {\n      case FETCHING_STATUS.LOADING_IN_PROGRESS:\n        return (\n          <div className=\"d-flex justify-content-center my-3 text-lovo\">\n            <Spinner className=\"m-3\" animation=\"border\" />\n          </div>\n        );\n      case FETCHING_STATUS.FETCHING_DONE:\n        if (props.articles.length > 0) {\n          return (\n            <div className=\"d-flex justify-content-center my-3\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-lovo mx-auto my-3\"\n                onClick={(event: SyntheticEvent) => handleClick(event)}\n              >\n                <AiOutlineReload /> 기사 더 불러오기\n              </button>\n            </div>\n          );\n        }\n        return undefined;\n      default:\n        return undefined;\n    }\n  };\n\n  const loadingMessage = (\n    <div className=\"list-wrapper\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-8 text-center my-3 text-lovo\">\n          <Spinner className=\"m-3 text-lovo\" animation=\"border\" />\n          <br />\n          <strong>기사를 불러오는 중입니다</strong>\n        </div>\n      </div>\n    </div>\n  );\n  const content = (\n    <div className=\"list-wrapper\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-8\">\n          {renderItems()}\n          {renderButton()}\n        </div>\n      </div>\n    </div>\n  );\n\n  switch (props.fetchingStatus) {\n    case FETCHING_STATUS.FINDING_IN_PROGRESS:\n      return loadingMessage;\n    case FETCHING_STATUS.LOADING_IN_PROGRESS:\n    default:\n      return content;\n  }\n};\n\n// export default ArticleList;\nconst mapStateToProps = (state: AppState) => ({\n  articles: state.articles,\n  page: state.page,\n  query: state.query,\n  fetchingStatus: state.fetchingStatus,\n  favouriteArticles: state.favourites,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  loadMoreArticle: (query: string, page: number) => dispatch(loadMoreArticle(query, page)),\n  addToFavourite: (article: Article) => dispatch(addToFavourites(article)),\n  removeFavourite: (id: string) => dispatch(removeFavourite(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleList);\n","import React, { FC } from 'react';\nimport { Favourites } from '../../store/types';\nimport { connect } from 'react-redux';\nimport { removeFavourite } from '../../store/actions';\nimport { AppState } from '../../store/store';\nimport NewsItem from '../NewsItem/NewsItem';\nimport { Article } from '../../store/models';\nimport { IoIosWarning } from 'react-icons/io';\nimport { useHistory } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\n\ninterface IFavouritesProps {\n  favouriteArticles: Favourites;\n  removeFavourite: (id: string) => void;\n  articles: Article[];\n}\n\nconst FavouritesList: FC<IFavouritesProps> = (props: IFavouritesProps): JSX.Element => {\n  const history = useHistory();\n\n  const remove = (article: Article): void => {\n    props.removeFavourite(article._id);\n  };\n\n  const handleButtonClick = (_: React.MouseEvent): void => {\n    history.goBack();\n  };\n\n  const renderItems = (): JSX.Element[] => {\n    const arr: JSX.Element[] = [];\n    const map = props.favouriteArticles.map;\n    // eslint-disable-next-line array-callback-return\n    props.favouriteArticles.articles.map((news: Article): void => {\n      arr.push(\n        <NewsItem\n          key={news._id}\n          item={news}\n          isFavourite={map[news._id]}\n          onFavouritesClicked={remove}\n        />\n      );\n    });\n    return arr;\n  };\n\n  const renderGoBackButton = (): JSX.Element => {\n    if (props.articles.length > 0) {\n      return (\n        <button type=\"button\" className=\"btn btn-outline-lovo mt-4\" onClick={handleButtonClick}>\n          <FaArrowLeft /> 검색결과로 돌아가기\n        </button>\n      );\n    }\n    return <p>검색창에 키워드를 넣고 기사를 검색 해 주세요</p>;\n  };\n\n  const noContent = (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-md-8 text-center py-5 text-lovo\">\n        <h1 className=\"pb-3 display-2\">\n          <IoIosWarning />\n        </h1>\n        <h4 className=\"pt-3\"> 즐겨찾기 된 기사가 없습니다</h4>\n        <div className=\"mt-4 p-2\">{renderGoBackButton()}</div>\n      </div>\n    </div>\n  );\n  const content = (\n    <div className=\"list-wrapper\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <div className=\"text-right align-top pt-2 pb-4\">{renderGoBackButton()}</div>\n          {renderItems()}\n        </div>\n      </div>\n    </div>\n  );\n  return props.favouriteArticles.articles.length > 0 ? content : noContent;\n};\n\nconst mapStateToProps = (state: AppState): any => ({\n  favouriteArticles: state.favourites,\n  articles: state.articles,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => ({\n  removeFavourite: (id: string): void => dispatch(removeFavourite(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouritesList);\n","import React, { FC } from 'react';\nimport './App.scss';\nimport SearchBar from './SearchBar/SearchBar';\nimport ArticleList from './ArticleList/ArticleList';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { AppState } from '../store/store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { findArticle } from '../thunks';\nimport FavouritesList from './FavouritesList/FavouritesList';\nimport { FAVOURITES_ROUTE, HOME_ROUTE } from '../routes';\n\nconst mapStateToProps = (state: AppState): any => ({\n  articles: state.articles,\n  page: state.page,\n  query: state.query,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => ({\n  loadArticles: (query: string) => dispatch(findArticle(query)),\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype AppProps = PropsFromRedux & {\n  loadArticles: (query: string) => void;\n};\n\nconst App: FC<AppProps> = (props: AppProps): JSX.Element => {\n  return (\n    <span>\n      <h1 className=\"text-center py-5 header mb-2\">Awesome NY Times</h1>\n      <div className=\"container\">\n        <Router>\n          <SearchBar searchArticle={props.loadArticles} />\n          <Switch>\n            <Route path={FAVOURITES_ROUTE} component={FavouritesList} />\n            <Route path={HOME_ROUTE} component={ArticleList} />\n          </Switch>\n        </Router>\n      </div>\n    </span>\n  );\n};\n\nexport default connector(App);\n","// tslint:disable: no-console\n// tslint:disable: typedef\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  ArticleActionType,\n  LOAD_ARTICLES_SUCCESS,\n  LOAD_ARTICLES_FAILED,\n  LOAD_ARTICLES_IN_PROGRESS,\n  FIND_ARTICLES_SUCCESS,\n  FETCHING_STATUS,\n  FIND_ARTICLES_IN_PROGRESS,\n  ADD_TO_FAVOURITES,\n  REMOVE_FAVOURITE,\n  FavouritesActionType,\n  Favourites,\n} from './types';\nimport { Article } from './models';\n\nexport const fetchingStatus = (\n  state = FETCHING_STATUS.FETCHING_DONE,\n  action: ArticleActionType\n): FETCHING_STATUS => {\n  switch (action.type) {\n    case LOAD_ARTICLES_IN_PROGRESS:\n      return FETCHING_STATUS.LOADING_IN_PROGRESS;\n    case FIND_ARTICLES_IN_PROGRESS:\n      return FETCHING_STATUS.FINDING_IN_PROGRESS;\n    case FIND_ARTICLES_SUCCESS:\n    case LOAD_ARTICLES_SUCCESS:\n    case LOAD_ARTICLES_FAILED:\n      return FETCHING_STATUS.FETCHING_DONE;\n    default:\n      return state;\n  }\n};\n\nexport const articles = (state: Article[] = [], action: ArticleActionType): Article[] => {\n  switch (action.type) {\n    case LOAD_ARTICLES_SUCCESS:\n      return state.concat(action.payload.articles);\n    case FIND_ARTICLES_SUCCESS:\n      return action.payload.articles;\n    case LOAD_ARTICLES_IN_PROGRESS:\n    case LOAD_ARTICLES_FAILED:\n    default:\n      return state;\n  }\n};\n\nexport const page = (state: number = 0, action: ArticleActionType): number => {\n  switch (action.type) {\n    case FIND_ARTICLES_SUCCESS:\n      return 1;\n    case LOAD_ARTICLES_SUCCESS:\n      return ++action.payload.page;\n    case LOAD_ARTICLES_IN_PROGRESS:\n    case LOAD_ARTICLES_FAILED:\n    default:\n      return state;\n  }\n};\n\nexport const query = (state: string = '', action: ArticleActionType): string => {\n  switch (action.type) {\n    case FIND_ARTICLES_SUCCESS:\n    case LOAD_ARTICLES_SUCCESS:\n      return action.payload.query;\n    case LOAD_ARTICLES_IN_PROGRESS:\n    case LOAD_ARTICLES_FAILED:\n    default:\n      return state;\n  }\n};\n\nconst initialFavouritesState: Favourites = {\n  articles: [],\n  map: {},\n};\n\nexport const favourites = (\n  state: Favourites = initialFavouritesState,\n  action: FavouritesActionType\n) => {\n  switch (action.type) {\n    case ADD_TO_FAVOURITES:\n      return {\n        articles: state.articles.concat(action.payload.article),\n        map: { ...state.map, [action.payload.article._id]: true },\n      };\n    case REMOVE_FAVOURITE:\n      delete state.map[action.payload.id];\n      return {\n        articles: state.articles.filter((article) => article._id !== action.payload.id),\n        map: state.map,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { articles, fetchingStatus, page, query, favourites } from './reducers';\n\nconst rootReducer = combineReducers({\n  articles,\n  fetchingStatus,\n  page,\n  query,\n  favourites,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore(): Store {\n  const middlewares = [thunkMiddleware];\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  const store = createStore(rootReducer, composeWithDevTools(middleWareEnhancer));\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/store';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}